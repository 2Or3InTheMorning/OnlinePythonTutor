{
  "code": "exec(\"import os; os.system('echo security breach')\")\n",
  "trace": [
    {
      "line": 1,
      "event": "step_line",
      "func_name": "<module>",
      "globals": {},
      "ordered_globals": [],
      "stack_to_render": [],
      "heap": {},
      "stdout": ""
    },
    {
      "line": 1,
      "event": "call",
      "func_name": "<module>",
      "globals": {},
      "ordered_globals": [],
      "stack_to_render": [],
      "heap": {},
      "stdout": ""
    },
    {
      "line": 1,
      "event": "step_line",
      "func_name": "<module>",
      "globals": {},
      "ordered_globals": [],
      "stack_to_render": [],
      "heap": {},
      "stdout": ""
    },
    {
      "line": 1,
      "event": "exception",
      "func_name": "<module>",
      "globals": {},
      "ordered_globals": [],
      "stack_to_render": [],
      "heap": {},
      "stdout": "",
      "exception_msg": "ImportError: os not supported\nOnly these modules can be imported into Python Tutor:\n  __future__, abc, array, bisect, calendar, cmath,\n  collections, copy, datetime, decimal, doctest, fractions,\n  functools, glob, hashlib, heapq, io, itertools,\n  json, locale, math, operator, pickle, pprint,\n  random, re, string, struct, time, types,\n  typing, unittest"
    },
    {
      "line": 1,
      "event": "return",
      "func_name": "<module>",
      "globals": {},
      "ordered_globals": [],
      "stack_to_render": [],
      "heap": {},
      "stdout": ""
    },
    {
      "line": 1,
      "event": "exception",
      "func_name": "<module>",
      "globals": {},
      "ordered_globals": [],
      "stack_to_render": [],
      "heap": {},
      "stdout": "",
      "exception_msg": "ImportError: os not supported\nOnly these modules can be imported into Python Tutor:\n  __future__, abc, array, bisect, calendar, cmath,\n  collections, copy, datetime, decimal, doctest, fractions,\n  functools, glob, hashlib, heapq, io, itertools,\n  json, locale, math, operator, pickle, pprint,\n  random, re, string, struct, time, types,\n  typing, unittest"
    }
  ]
}
