{
  "code": "import __future__, abc, array, bisect, calendar, cmath, collections, copy, datetime, decimal, doctest, fractions, functools, glob, hashlib, heapq, inspect, io, itertools, json, locale, math, operator, pickle, pprint, random, re, string, struct, time, types, unittest\n",
  "trace": [
    {
      "line": 1,
      "event": "step_line",
      "func_name": "<module>",
      "globals": {},
      "ordered_globals": [],
      "stack_to_render": [],
      "heap": {},
      "stdout": ""
    },
    {
      "line": 1,
      "event": "return",
      "func_name": "<module>",
      "globals": {
        "__future__": [
          "REF",
          1
        ],
        "abc": [
          "REF",
          2
        ],
        "array": [
          "REF",
          3
        ],
        "bisect": [
          "REF",
          4
        ],
        "calendar": [
          "REF",
          5
        ],
        "cmath": [
          "REF",
          6
        ],
        "collections": [
          "REF",
          7
        ],
        "copy": [
          "REF",
          8
        ],
        "datetime": [
          "REF",
          9
        ],
        "decimal": [
          "REF",
          10
        ],
        "doctest": [
          "REF",
          11
        ],
        "fractions": [
          "REF",
          12
        ],
        "functools": [
          "REF",
          13
        ],
        "glob": [
          "REF",
          14
        ],
        "hashlib": [
          "REF",
          15
        ],
        "heapq": [
          "REF",
          16
        ],
        "inspect": [
          "REF",
          17
        ],
        "io": [
          "REF",
          18
        ],
        "itertools": [
          "REF",
          19
        ],
        "json": [
          "REF",
          20
        ],
        "locale": [
          "REF",
          21
        ],
        "math": [
          "REF",
          22
        ],
        "operator": [
          "REF",
          23
        ],
        "pickle": [
          "REF",
          24
        ],
        "pprint": [
          "REF",
          25
        ],
        "random": [
          "REF",
          26
        ],
        "re": [
          "REF",
          27
        ],
        "string": [
          "REF",
          28
        ],
        "struct": [
          "REF",
          29
        ],
        "time": [
          "REF",
          30
        ],
        "types": [
          "REF",
          31
        ],
        "unittest": [
          "REF",
          32
        ]
      },
      "ordered_globals": [
        "__future__",
        "abc",
        "array",
        "bisect",
        "calendar",
        "cmath",
        "collections",
        "copy",
        "datetime",
        "decimal",
        "doctest",
        "fractions",
        "functools",
        "glob",
        "hashlib",
        "heapq",
        "inspect",
        "io",
        "itertools",
        "json",
        "locale",
        "math",
        "operator",
        "pickle",
        "pprint",
        "random",
        "re",
        "string",
        "struct",
        "time",
        "types",
        "unittest"
      ],
      "stack_to_render": [],
      "heap": {
        "1": [
          "INSTANCE",
          "module"
        ],
        "2": [
          "INSTANCE",
          "module"
        ],
        "3": [
          "INSTANCE",
          "module"
        ],
        "4": [
          "INSTANCE",
          "module"
        ],
        "5": [
          "INSTANCE",
          "module"
        ],
        "6": [
          "INSTANCE",
          "module"
        ],
        "7": [
          "INSTANCE",
          "module"
        ],
        "8": [
          "INSTANCE",
          "module"
        ],
        "9": [
          "INSTANCE",
          "module"
        ],
        "10": [
          "INSTANCE",
          "module"
        ],
        "11": [
          "INSTANCE",
          "module"
        ],
        "12": [
          "INSTANCE",
          "module"
        ],
        "13": [
          "INSTANCE",
          "module"
        ],
        "14": [
          "INSTANCE",
          "module"
        ],
        "15": [
          "INSTANCE",
          "module"
        ],
        "16": [
          "INSTANCE",
          "module"
        ],
        "17": [
          "INSTANCE",
          "module"
        ],
        "18": [
          "INSTANCE",
          "module"
        ],
        "19": [
          "INSTANCE",
          "module"
        ],
        "20": [
          "INSTANCE",
          "module"
        ],
        "21": [
          "INSTANCE",
          "module"
        ],
        "22": [
          "INSTANCE",
          "module"
        ],
        "23": [
          "INSTANCE",
          "module"
        ],
        "24": [
          "INSTANCE",
          "module"
        ],
        "25": [
          "INSTANCE",
          "module"
        ],
        "26": [
          "INSTANCE",
          "module"
        ],
        "27": [
          "INSTANCE",
          "module"
        ],
        "28": [
          "INSTANCE",
          "module"
        ],
        "29": [
          "INSTANCE",
          "module"
        ],
        "30": [
          "INSTANCE",
          "module"
        ],
        "31": [
          "INSTANCE",
          "module"
        ],
        "32": [
          "INSTANCE",
          "module"
        ]
      },
      "stdout": ""
    }
  ]
}
